{"version":3,"sources":["services/ApiService.js","components/users/index.js"],"names":["axios","create","baseURL","getBadge","status","fields","Tables","props","handlePayment","id","history","push","state","usersData","APISerivce","get","then","res","data","setState","catch","err","console","log","this","className","rel","style","onClick","items","hover","striped","bordered","size","itemsPerPage","pagination","scopedSlots","item","color","shape","event","handleEdit","handleDelete","Component"],"mappings":"yGAAA,sBAOgBA,QAAMC,OAAO,CAC5BC,QAAQ,gD,kHCKHC,EAAW,SAAAC,GACf,OAAQA,GACN,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,YACjB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAYdC,EAAS,CAAC,gBAAgB,cAAe,kBAAmB,SAAU,UAEtEC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAgBRC,cAAgB,SAAAC,GACd,EAAKF,MAAMG,QAAQC,KAAnB,wBAAyCF,KAhBzC,EAAKG,MAAQ,CACXC,UAAU,IAHI,E,gEAMG,IAAD,OAClBC,IAAWC,IAAI,aAAaC,MAAK,SAAAC,GAC/B,IAAMJ,EAAYI,EAAIC,KACtB,EAAKC,SAAS,CACZN,iBAEDO,OAAM,SAAAC,GACPC,QAAQC,IAAI,MAAMF,Q,+BAQZ,IAAD,OACCR,EAAcW,KAAKZ,MAAnBC,UACR,OACE,oCACE,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,qBAEE,yBAAKY,UAAU,uBACb,0BAAOC,IAAI,sBAAsBC,MAAO,CAAC,OAAS,WAAYC,QAAS,WAAK,EAAKrB,MAAMG,QAAQC,KAAK,eAAgBc,UAAU,sBAC5H,2BAAOA,UAAU,cAAjB,UAIN,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEI,MAAOhB,EACPR,OAAQA,EACRyB,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAOnC,EAASkC,EAAKjC,SACV,MAAhBiC,EAAKjC,OAAiB,SAAW,eAIxC,OACA,SAACiC,GAAD,OACI,4BACI,kBAAC,IAAD,CAASJ,KAAK,KAAKM,MAAM,OAAOX,QAAS,SAACY,GAAD,OArElD,SAACjC,EAAO8B,GACvB9B,EAAMG,QAAQC,KAAd,sBAAkC0B,IAoEwCI,CAAW,EAAKlC,MAAM8B,EAAK5B,KAAK6B,MAAM,WAAxF,QACA,kBAAC,IAAD,CAASL,KAAK,KAAKM,MAAM,OAAOX,QAAS,SAACY,GAAD,OAlEhD,SAACjC,EAAO8B,GACzBf,QAAQC,IAAI,QAAQhB,EAAO8B,GAiE+CK,CAAa,EAAKnC,MAAM8B,EAAK5B,KAAK6B,MAAM,UAA1F,UACA,kBAAC,IAAD,CAASL,KAAK,KAAKM,MAAM,OAAOX,QAAS,SAACY,GAAD,OAAS,EAAKhC,cAAc6B,EAAK5B,KAAK6B,MAAM,UAArF,yB,GA7DPK,aA2ENrC","file":"static/js/45.2c130041.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/*\r\nName : AXIOS Base \r\nPurpose : To configure interceptors and required defualt headers\r\n*/\r\n\r\n export default axios.create({\r\n\tbaseURL:'http://thilagaraj.me/rapidwifi-api/webapi/'\r\n});","import React, { Component } from 'react'\r\nimport {\r\n  CButton,\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport APISerivce from '../../services/ApiService';\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case '1': return 'success'\r\n    case '0': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst handleEdit = (props, item) => {\r\n    props.history.push(`/users/edit/${item}`)\r\n}\r\n\r\nconst handleDelete = (props, item) => {\r\n    console.log(\"bbbbb\",props, item)\r\n}\r\n\r\nconst fields = ['customer_name','customer_id', 'customer_mobile', 'status', 'action']\r\n\r\nclass Tables extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      usersData:[]\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    APISerivce.get('/listuser').then(res=>{\r\n      const usersData = res.data;\r\n      this.setState({\r\n        usersData\r\n      })\r\n    }).catch(err=>{\r\n      console.log(\"err\",err)\r\n    })\r\n  }\r\n\r\n  handlePayment = id => {\r\n    this.props.history.push(`/payments/add/${id}`)\r\n  }\r\n\r\n  render() {\r\n    const { usersData } = this.state;\r\n    return (\r\n      <>\r\n        <CRow>\r\n          <CCol>\r\n            <CCard>\r\n              <CCardHeader>\r\n                Customer List\r\n                <div className=\"card-header-actions\">\r\n                  <span  rel=\"noreferrer noopener\" style={{'cursor':'pointer'}} onClick={()=>{this.props.history.push('/users/add')}} className=\"card-header-action\">\r\n                    <small className=\"text-muted\">Add</small>\r\n                  </span>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n              <CDataTable\r\n                items={usersData}\r\n                fields={fields}\r\n                hover\r\n                striped\r\n                bordered\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots = {{\r\n                  'status':\r\n                    (item)=>(\r\n                      <td>\r\n                        <CBadge color={getBadge(item.status)}>\r\n                          {item.status === '1' ? 'Active' : 'In-Active'}\r\n                        </CBadge>\r\n                      </td>\r\n                    ),\r\n                    'action':\r\n                    (item)=>(\r\n                        <td>\r\n                            <CButton size=\"sm\" shape=\"pill\" onClick={(event)=>handleEdit(this.props,item.id)} color=\"success\">Edit</CButton>\r\n                            <CButton size=\"sm\" shape=\"pill\" onClick={(event)=>handleDelete(this.props,item.id)} color=\"danger\">Delete</CButton>\r\n                            <CButton size=\"sm\" shape=\"pill\" onClick={(event)=>this.handlePayment(item.id)} color=\"danger\">Payment</CButton>\r\n                        </td>\r\n                    )\r\n                }}\r\n              />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tables\r\n"],"sourceRoot":""}