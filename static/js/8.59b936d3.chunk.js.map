{"version":3,"sources":["services/ApiService.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/users/add.js"],"names":["axios","create","baseURL","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError","BasicForms","props","handleCancel","history","push","handleSubmit","state","user_id","user_name","user_payment","user_mobile","user_email","user_address","user_pincode","user_role","user_area","status","alert","APISerivce","post","then","res","catch","err","onSelect","selectedList","selectedItem","options","optionids","map","val","id","setState","onRemove","removedItem","idx","findIndex","ind","splice","ids","console","log","handleUserChange","event","target","value","indexOf","indx","collapsed","setCollapsed","showElements","setShowElements","get","data","results","this","selcted_Area","filter","v","allOptions","xs","md","action","method","className","row","htmlFor","custom","disabled","onChange","type","placeholder","autoComplete","rows","key","showCheckbox","selectedValues","displayValue","size","color","onClick","Component"],"mappings":"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","file":"static/js/8.59b936d3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/*\r\nName : AXIOS Base \r\nPurpose : To configure interceptors and required defualt headers\r\n*/\r\n\r\n export default axios.create({\r\n\tbaseURL:'https://thilagaraj.me/rapidwifi-api/webapi/'\r\n});","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {Component} from 'react';\r\nimport APISerivce from '../../services/ApiService';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CTextarea,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\n\r\nclass BasicForms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true, \r\n            setCollapsed: true,\r\n            showElements: true, \r\n            setShowElements: true,\r\n            user_id: 'RAP003',\r\n            user_name:'aaaaa',\r\n            user_mobile: '97876543219',\r\n            user_email: 'aaa@gmail.com',\r\n            user_address: 'sssssssss',\r\n            user_pincode: '123456',\r\n            user_role: 'customer',\r\n            user_payment: 'full',\r\n            user_area: [1],\r\n            options: [{name: 'Salem', id: 1},{name: 'Jalakandapuram', id: 2}],\r\n            status: 1,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      APISerivce.get('/listarea').then(res=>{\r\n        console.log('res',res.data)\r\n        this.setState({\r\n          options:res.data.results\r\n        })\r\n      }).catch(err=>{\r\n\r\n      })\r\n    }\r\n\r\n    handleCancel = ()=> {\r\n        this.props.history.push('/users')\r\n    }\r\n\r\n    handleSubmit = () => {\r\n      const { user_id, user_name, user_payment, user_mobile, user_email, user_address, user_pincode, user_role, user_area, status } = this.state;\r\n      if(!!user_id && !!user_name && !!user_payment && !!user_mobile && !!user_email && !!user_address \r\n        && !!user_pincode && !!user_role && !!user_area && !!status){\r\n          APISerivce.post('/adduser',{\r\n            'customerId': user_id,\r\n            'userId': user_id,\r\n            'customerName': user_name,\r\n            'customerEmail': user_email, \r\n            'customerMobile': user_mobile,\r\n            'customerAddress': user_address,\r\n            'customerPinCode': user_pincode,\r\n            'customerRoleId': user_role.toString(),\r\n            'paymentType': user_payment,\r\n            status\r\n          }).then(res=>{\r\n            this.props.history.push(`/users`)\r\n          }).catch(err=>{\r\n            alert(`Please try again`)\r\n          })\r\n        }else {\r\n          alert(`please fill all the fields`);\r\n          return false;\r\n        }\r\n    }\r\n\r\n    onSelect = (selectedList, selectedItem)=> {\r\n        const { user_area, options } = this.state;\r\n        if(selectedItem.name === 'All') {\r\n          const optionids = options.map(val=>val.id);\r\n          this.setState({\r\n            // user_area: ['All',...optionids]\r\n            user_area: [...optionids]\r\n          })\r\n        }else {\r\n          this.setState({\r\n            user_area: [...user_area, selectedItem.id]\r\n          })\r\n        }\r\n    }\r\n    \r\n    onRemove = (selectedList, removedItem)=> {\r\n      const { options } = this.state;\r\n      const idx = options.findIndex((val,ind)=> val.name === removedItem.name );\r\n      selectedList.splice(idx,1);\r\n      const ids = selectedList.map(val=>val.id);\r\n      console.log(selectedList, removedItem,ids)\r\n      this.setState({\r\n        user_area: [...ids]\r\n      })\r\n    }\r\n\r\n    handleUserChange = event => {\r\n        const { name, value } = event.target;\r\n        const {user_area} = this.state;\r\n        if(name === 'user_area') {\r\n          if(user_area.indexOf(value) === -1) {\r\n            console.log(user_area.indexOf(value))\r\n            this.setState({\r\n              [name] : [...user_area, value]\r\n            })\r\n          } else {\r\n            const indx = user_area.indexOf(value);\r\n            console.log(user_area,indx)\r\n            user_area.splice(indx,1);\r\n            console.log(user_area)\r\n            this.setState({\r\n              [name]: [...user_area]\r\n            })\r\n          }\r\n        } else if ( name === 'user_area_customer' ) {\r\n          this.setState({\r\n            'user_area': [value]\r\n          })\r\n        } else {\r\n          this.setState({\r\n            [name]: value\r\n          })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { user_name, user_mobile, user_email, user_payment, user_id,\r\n          user_address, user_pincode, user_role, user_area, options } = this.state;\r\n          const selcted_Area = options.filter((val,ind)=>{\r\n            return user_area.map(v=> val.id === v)\r\n          })\r\n          console.log('user_area',user_area)\r\n          let allOptions = []; \r\n          if(options.length > 0) {\r\n            // allOptions = [{name: 'All', id: 0}, ...options]\r\n            allOptions = [...options]\r\n          }\r\n          // console.log(\"aaa\",allOptions)\r\n        return (\r\n            <>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"10\">\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      Customer Add\r\n                      <small> Form</small>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                      <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"user-role\">Role</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect custom disabled={true} name=\"user_role\" onChange={this.handleUserChange} value={user_role} id=\"user-role\">\r\n                                <option value=\"\">Please select Role</option>\r\n                                <option value=\"super-admin\">Super Admin</option>\r\n                                <option value=\"admin\">Admin</option>\r\n                                <option value=\"customer\">Customer</option>\r\n                              </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-id\">{this.state.user_role} Id</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CInput type=\"text\" value={user_id} onChange={this.handleUserChange} id=\"user-id\" name=\"user_id\" placeholder=\"Enter Id\" />\r\n                            </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-name\">Name</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CInput type=\"text\" value={user_name} onChange={this.handleUserChange} id=\"user-name\" name=\"user_name\" placeholder=\"Enter Name\" autoComplete=\"email\" />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-mobile\">Mobile</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CInput type=\"mobile\" value={user_mobile} onChange={this.handleUserChange} id=\"user-mobile\" name=\"user_mobile\" placeholder=\"Enter MobileNo\" />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-email\">Email</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CInput type=\"email\" value={user_email} onChange={this.handleUserChange} id=\"user-email\" name=\"user_email\" placeholder=\"Enter Email\" autoComplete=\"email\" />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"hf-email\">Address</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CTextarea \r\n                                  value={user_address}\r\n                                  onChange={this.handleUserChange}\r\n                                  name=\"user_address\" \r\n                                  id=\"user-address\" \r\n                                  rows=\"5\"\r\n                                  placeholder=\"Address\" \r\n                                  />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-pincode\">Pin Code</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CInput type=\"number\" value={user_pincode} onChange={this.handleUserChange} id=\"user-pincode\" name=\"user_pincode\" placeholder=\"Pin Code\" autoComplete=\"current-password\" />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-payment\">Payment</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <CSelect custom name=\"user_payment\" onChange={this.handleUserChange} value={user_payment} id=\"user-payment\">\r\n                                  <option value=\"\">Please select payment</option>\r\n                                  <option value=\"partial\">Partial</option>\r\n                                  <option value=\"full\">Full</option>\r\n                                </CSelect>\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CCol md=\"3\">\r\n                              <CLabel htmlFor=\"user-area\">Area</CLabel>\r\n                            </CCol>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              {\r\n                                this.state.user_role === 'customer' ? (\r\n                                  <CSelect custom name=\"user_area_customer\" onChange={this.handleUserChange} value={user_area.length > 0 ? user_area[0] : ''} id=\"user-area\">\r\n                                    {options.map((key,ind)=><option key={ind} value={key.id}>{key.name}</option>)}\r\n                                  </CSelect>\r\n                                ) : (\r\n                                  <Multiselect\r\n                                    showCheckbox={true}\r\n                                    selectedValues={selcted_Area}\r\n                                    options={allOptions}\r\n                                    displayValue=\"name\"\r\n                                    onSelect={this.onSelect} // Function will trigger on select event\r\n                                    onRemove={this.onRemove}\r\n                                  />\r\n                                )\r\n                              }\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    <CCardFooter>\r\n                      <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.handleCancel}><CIcon name=\"cil-ban\"  /> Cancel</CButton>\r\n                      &nbsp;\r\n                      <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleSubmit}><CIcon name=\"cil-scrubber\" /> Add</CButton> \r\n                    </CCardFooter>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n    }\r\n}\r\n\r\nexport default BasicForms\r\n"],"sourceRoot":""}