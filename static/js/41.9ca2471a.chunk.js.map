{"version":3,"sources":["services/ApiService.js","components/plans/index.js"],"names":["axios","create","baseURL","getBadge","status","fields","Tables","props","handleDelete","id","window","confirm","APISerivce","delete","data","user_id","then","res","result","state","usersData","filter","val","setState","catch","err","console","log","handleAdd","history","push","get","results","this","fallback","className","onClick","style","rel","items","hover","striped","bordered","size","itemsPerPage","pagination","scopedSlots","item","color","getStatus","shape","event","handleEdit","Component"],"mappings":"yGAAA,sBAOgBA,QAAMC,OAAO,CAC5BC,QAAQ,iD,kHCKHC,EAAW,SAAAC,GACf,OAAQA,GACN,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,YACjB,IAAK,UAAW,MAAO,UACvB,IAAK,SAAU,MAAO,SACtB,QAAS,MAAO,YAgBdC,EAAS,CAAC,UAAU,cAAe,SAAU,UAE7CC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAgBRC,aAAe,SAACC,GACXC,OAAOC,QAAQ,iCAChBC,IAAWC,OAAX,sBAAiCJ,GACjC,CAIEK,KAAM,CACJC,QAASN,KAEVO,MAAK,SAAAC,GAAM,IAENC,EADgB,EAAKC,MAAnBC,UACiBC,QAAO,SAAAC,GAAG,OAAEA,EAAIb,KAAOA,KAChD,EAAKc,SAAS,CACZH,UAAWF,OAEZM,OAAM,SAAAC,GACPC,QAAQC,IAAI,MAAMF,OAlCN,EAuClBG,UAAY,WACV,EAAKrB,MAAMsB,QAAQC,KAAK,eAtCxB,EAAKX,MAAQ,CACXC,UAAU,IAHI,E,gEAMG,IAAD,OAClBR,IAAWmB,IAAI,aAAaf,MAAK,SAAAC,GAC/B,IAAMG,EAAYH,EAAIH,KAAKkB,QAC3B,EAAKT,SAAS,CACZH,iBAEDI,OAAM,SAAAC,GACPC,QAAQC,IAAI,MAAMF,Q,+BA8BZ,IAAD,OACCL,EAAca,KAAKd,MAAnBC,UACR,OACE,oCACE,kBAAC,WAAD,CAAUc,SAAU,6CACpB,kBAAC,KAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iBAEE,yBAAKC,UAAU,uBACb,0BAAMC,QAASH,KAAKL,UAAWS,MAAO,CAAC,OAAU,WAAYC,IAAI,sBAAsBH,UAAU,sBAC/F,2BAAOA,UAAU,cAAjB,UAIN,kBAAC,IAAD,KACA,kBAAC,IAAD,CACEI,MAAOnB,EACPf,OAAQA,EACRmC,OAAK,EACLC,SAAO,EACPC,UAAQ,EACRC,KAAK,KACLC,aAAc,GACdC,YAAU,EACVC,YAAe,CACb,OACE,SAACC,GAAD,OACE,4BACE,kBAAC,IAAD,CAAQC,MAAO7C,EAAS4C,EAAK3C,SAxFnC,SAAAA,GAChB,MAAkB,MAAXA,EAAiB,SAAW,YAwFV6C,CAAUF,EAAK3C,WAItB,OACA,SAAC2C,GAAD,OACI,4BACI,kBAAC,IAAD,CAASJ,KAAK,KAAKO,MAAM,OAAOd,QAAS,SAACe,GAAD,OA5FlD,SAAC5C,EAAOwC,GACvBxC,EAAMsB,QAAQC,KAAd,sBAAkCiB,IA2FwCK,CAAW,EAAK7C,MAAMwC,EAAKtC,KAAKuC,MAAM,WAAxF,QACA,kBAAC,IAAD,CAASL,KAAK,KAAKO,MAAM,OAAOd,QAAS,SAACe,GAAD,OAAS,EAAK3C,aAAauC,EAAKtC,KAAKuC,MAAM,UAApF,wB,GAnFPK,aAiGN/C","file":"static/js/41.9ca2471a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/*\r\nName : AXIOS Base \r\nPurpose : To configure interceptors and required defualt headers\r\n*/\r\n\r\n export default axios.create({\r\n\tbaseURL:'https://thilagaraj.me/rapidwifi-api/webapi/'\r\n});","import React, {Component, Suspense} from 'react'\r\nimport {\r\n  CButton,\r\n  CBadge,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow\r\n} from '@coreui/react'\r\nimport APISerivce from '../../services/ApiService';\r\n\r\nconst getBadge = status => {\r\n  switch (status) {\r\n    case '1': return 'success'\r\n    case '0': return 'secondary'\r\n    case 'Pending': return 'warning'\r\n    case 'Banned': return 'danger'\r\n    default: return 'primary'\r\n  }\r\n}\r\n\r\nconst getStatus = status => {\r\n  return status === '1' ? 'Active' : 'In-Active'\r\n}\r\n\r\nconst handleEdit = (props, item) => {\r\n    props.history.push(`/plans/edit/${item}`)\r\n}\r\n\r\nconst handleDelete = (props, item) => {\r\n    console.log(\"bbbbb\",props, item)\r\n}\r\n\r\nconst fields = ['plan_id','plan_amount', 'status', 'action']\r\n\r\nclass Tables extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      usersData:[]\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    APISerivce.get('/listplan').then(res=>{\r\n      const usersData = res.data.results;\r\n      this.setState({\r\n        usersData\r\n      })\r\n    }).catch(err=>{\r\n      console.log(\"err\",err)\r\n    })\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    if(window.confirm('Are you sure want to delete?')) {\r\n      APISerivce.delete(`/deleteplan/${id}`,\r\n      {\r\n        // headers: {\r\n        //   Authorization: 'authorizationToken'\r\n        // },\r\n        data: {\r\n          user_id: id\r\n        }\r\n      }).then(res=>{\r\n        const { usersData } = this.state;\r\n        const result = usersData.filter(val=>val.id !== id);\r\n        this.setState({\r\n          usersData: result\r\n        })\r\n      }).catch(err=>{\r\n        console.log(\"err\",err)\r\n      })\r\n    }\r\n  }\r\n\r\n  handleAdd = () =>  {\r\n    this.props.history.push('/plans/add')\r\n  }\r\n\r\n  render() {\r\n    const { usersData } = this.state;\r\n    return (\r\n      <>\r\n        <Suspense fallback={<div>Loading...</div>} />\r\n        <CRow>\r\n          <CCol>\r\n            <CCard>\r\n              <CCardHeader>\r\n                Area List\r\n                <div className=\"card-header-actions\">\r\n                  <span onClick={this.handleAdd} style={{'cursor': 'pointer'}} rel=\"noreferrer noopener\" className=\"card-header-action\">\r\n                    <small className=\"text-muted\">Add</small>\r\n                  </span>\r\n                </div>\r\n              </CCardHeader>\r\n              <CCardBody>\r\n              <CDataTable\r\n                items={usersData}\r\n                fields={fields}\r\n                hover\r\n                striped\r\n                bordered\r\n                size=\"sm\"\r\n                itemsPerPage={10}\r\n                pagination\r\n                scopedSlots = {{\r\n                  'status':\r\n                    (item)=>(\r\n                      <td>\r\n                        <CBadge color={getBadge(item.status)}>\r\n                          {getStatus(item.status)}\r\n                        </CBadge>\r\n                      </td>\r\n                    ),\r\n                    'action':\r\n                    (item)=>(\r\n                        <td>\r\n                            <CButton size=\"sm\" shape=\"pill\" onClick={(event)=>handleEdit(this.props,item.id)} color=\"success\">Edit</CButton>\r\n                            <CButton size=\"sm\" shape=\"pill\" onClick={(event)=>this.handleDelete(item.id)} color=\"danger\">Delete</CButton>\r\n                        </td>\r\n                    )\r\n                }}\r\n              />\r\n              </CCardBody>\r\n            </CCard>\r\n          </CCol>\r\n        </CRow>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tables\r\n"],"sourceRoot":""}