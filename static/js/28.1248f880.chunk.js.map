{"version":3,"sources":["services/ApiService.js","components/connections/add.js"],"names":["axios","create","baseURL","BasicForms","props","handleCancel","history","push","handleSubmit","state","customer_id","plan_name","plan_doj","plan_amount","subtotal","router_charge","installation_charge","advance_planamount","advance_installationamount","advance_routeramount","discount","balance_amount","advance_amount","total","plan_gst","router_gst","installation_gst","APISerivce","post","userId","plan_id","connection_date","plan_gst_id","installation_gst_id","router_gst_id","status","then","catch","err","alert","getChargeAmount","lst","name","indx","inst","find","val","id","totalCalculation","install","plan","router","if_router_available","parseInt","getGrantTotal","instllation_list","router_list","gst","gst_list","plngstpercent","rutrgstpercent","instlngstpercent","instln","routr","plnWthGst","rutrWthGst","instlnWthGst","console","log","subTotal","discountval","gstpercent","gstcountval","setState","handleUserChange","event","target","value","get","res","data","checked","customer_list","plan_list","bill","reqUser","reqPlan","reqGst","reqInstall","reqRouter","all","spread","resUser","resPlan","resGst","resInstall","resRouter","results","this","xs","md","action","method","className","row","htmlFor","custom","onChange","map","key","customer_name","type","placeholder","gst_percent","installation_amount","router_amount","variant","disabled","size","color","onClick","Component"],"mappings":"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","file":"static/js/28.1248f880.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n/*\r\nName : AXIOS Base \r\nPurpose : To configure interceptors and required defualt headers\r\n*/\r\n\r\n export default axios.create({\r\n\tbaseURL:'http://thilagaraj.me/rapidwifi-api/webapi/'\r\n});","import React, {Component} from 'react';\r\nimport APISerivce from '../../services/ApiService';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CInputCheckbox,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react';\r\nimport axios from 'axios';\r\n\r\nclass BasicForms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customer_list: [],\r\n            plan_list: [],\r\n            gst_list: [],\r\n            gst: 0,\r\n            customer_id:'', \r\n            plan_name: '',\r\n            plan_doj: '',\r\n            instllation_list: [], \r\n            plan_amount: 0, \r\n            router_list: [],\r\n            installation_charge: 0,\r\n            router_charge: 0,\r\n            plan_gst: 0,\r\n            router_gst: 0,\r\n            installation_gst: 0,\r\n            advance_installationamount: 0, \r\n            advance_planamount: 0, \r\n            advance_routeramount: 0,\r\n            discount: 0,\r\n            subtotal: 0,\r\n            total: 0,\r\n            bill: 0,\r\n            if_router_available: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const reqUser = APISerivce.get(`/listuser`);\r\n      const reqPlan = APISerivce.get(`/listplan`);\r\n      const reqGst = APISerivce.get(`/listgst`);\r\n      const reqInstall = APISerivce.get(`/listinstallation`);\r\n      const reqRouter = APISerivce.get(`/listroutercharges`);\r\n      axios.all([reqUser, reqPlan, reqGst, reqInstall, reqRouter]).then(axios.spread((...response)=>{\r\n        const resUser = response[0];\r\n        const resPlan = response[1];\r\n        const resGst = response[2];\r\n        const resInstall = response[3];\r\n        const resRouter = response[4]\r\n        this.setState({\r\n          customer_list: resUser.data,\r\n          plan_list: resPlan.data.results,\r\n          gst_list: resGst.data.results,\r\n          instllation_list: resInstall.data.results,\r\n          router_list: resRouter.data.results\r\n\r\n        })\r\n        console.log(\"aa\",resUser,resPlan)\r\n      })).catch(err=>{\r\n        console.log('err',err)\r\n      })\r\n      \r\n    }\r\n\r\n    handleCancel = ()=> {\r\n        this.props.history.push('/connections')\r\n    }\r\n\r\n    handleSubmit = () => {\r\n      const { customer_id, plan_name, plan_doj, plan_amount, subtotal, \r\n        router_charge, installation_charge, \r\n        advance_planamount, advance_installationamount, advance_routeramount, discount, \r\n        balance_amount, advance_amount,\r\n        total, plan_gst, router_gst, installation_gst} = this.state;\r\n        \r\n      if(!!customer_id && !!plan_name && !!plan_doj && !!plan_amount && !!subtotal && !!router_charge && !!installation_charge &&\r\n         !!advance_planamount && !!advance_installationamount && !!advance_routeramount && !!discount && !!balance_amount &&\r\n          !!advance_amount && !!total && !!plan_gst && !!router_gst && !!installation_gst){\r\n        APISerivce.post('/addconnections',{\r\n          userId: 1,\r\n          customer_id, \r\n          plan_id: plan_name, \r\n          connection_date: plan_doj, \r\n          plan_amount, \r\n          plan_gst_id: plan_gst, \r\n          installation_gst_id: installation_gst, \r\n          router_gst_id: router_gst,\r\n          subtotal, \r\n          router_charge, \r\n          installation_charge, \r\n          plan_gst, \r\n          router_gst, \r\n          installation_gst,\r\n          advance_planamount, \r\n          advance_installationamount, \r\n          advance_routeramount, \r\n          discount, \r\n          balance_amount, \r\n          advance_amount,\r\n          total, \r\n          status: 1\r\n      }).then(()=>{\r\n        this.props.history.push('/connections')\r\n      }).catch(err=>{\r\n        alert('Error Try again',err)\r\n      })\r\n      }else {\r\n        alert(\"Please fill all the details\");\r\n      }\r\n    }\r\n\r\n    getChargeAmount = (lst, name, indx)=> {\r\n      const inst = lst.find(val=>val.id === indx);\r\n      const instln = !!inst ? inst[name]: 0\r\n      return instln\r\n    }\r\n\r\n    totalCalculation = (install, plan, router) => {\r\n      const { if_router_available } = this.state;\r\n      if(if_router_available === false) {\r\n        return parseInt(install) + parseInt(plan) + parseInt(router)\r\n      }else {\r\n        return parseInt(install) + parseInt(plan)\r\n      }\r\n    }\r\n\r\n    getGrantTotal = ()=>{\r\n      const {instllation_list, router_list, installation_charge, plan_amount, \r\n        router_charge, gst, gst_list, discount, if_router_available, \r\n        advance_planamount, advance_installationamount, advance_routeramount, \r\n        plan_gst, router_gst, installation_gst} = this.state;\r\n\r\n      let plngstpercent = this.getChargeAmount(gst_list, 'gst_percent', plan_gst);\r\n      let rutrgstpercent = this.getChargeAmount(gst_list, 'gst_percent', router_gst);\r\n      let instlngstpercent = this.getChargeAmount(gst_list, 'gst_percent', installation_gst);\r\n\r\n      const instln = this.getChargeAmount(instllation_list, 'installation_amount', installation_charge);\r\n      const routr = this.getChargeAmount(router_list, 'router_amount', router_charge);\r\n\r\n      let plnWthGst = !!plngstpercent ? (parseInt(plan_amount) / 100 ) * plngstpercent : 0;\r\n      let rutrWthGst = !!rutrgstpercent ? (parseInt(routr) / 100 ) * rutrgstpercent : 0;\r\n      let instlnWthGst = !!instlngstpercent ? (parseInt(instln) / 100 ) * instlngstpercent : 0;\r\n\r\n      plnWthGst = parseInt(plnWthGst) + parseInt(plan_amount);\r\n      rutrWthGst = parseInt(rutrWthGst) + parseInt(routr);\r\n      instlnWthGst = parseInt(instlnWthGst) + parseInt(instln);\r\n      console.log('plnWthGst',plnWthGst,rutrWthGst,instlnWthGst,plngstpercent,this.state)\r\n      let subTotal = this.totalCalculation(instlnWthGst, plnWthGst, rutrWthGst)\r\n      subTotal  = parseInt(subTotal);\r\n\r\n      let discountval = (subTotal / 100 ) * parseInt(discount) ;\r\n      discountval = subTotal - parseInt(discountval);\r\n      discountval = parseInt(discountval);\r\n      \r\n      let gstpercent = this.getChargeAmount(gst_list, 'gst_percent', gst);\r\n\r\n      let gstcountval = !!gst ? (discountval / 100) * parseInt(gstpercent)  : 0 ;\r\n      gstcountval =  discountval + parseInt(gstcountval);\r\n      gstcountval = parseInt(gstcountval)\r\n      \r\n      const advance_amount = parseInt(advance_planamount) + parseInt(advance_installationamount) + (if_router_available === false ? parseInt(advance_routeramount) : 0)\r\n      this.setState({\r\n        subtotal: subTotal,\r\n        total: gstcountval,\r\n        advance_amount,\r\n        balance_amount: gstcountval - advance_amount\r\n      })\r\n    }\r\n\r\n    handleUserChange = event => {\r\n        const { name, value } = event.target;\r\n        if(name === 'plan_name') {\r\n          APISerivce.get(`/listplan/${value}`).then(res=>{\r\n            const { plan_amount } = res.data;\r\n            this.setState({\r\n              [name]: value,\r\n              plan_amount,\r\n            },()=>{\r\n              this.getGrantTotal()\r\n            })\r\n          }).catch(err=>{\r\n            console.log(\"err\",err)\r\n          })\r\n        }else if(name === 'if_router_available') {\r\n          this.setState({\r\n            [name]: event.target.checked ? true : false,\r\n          },()=>{\r\n            this.getGrantTotal()\r\n          })\r\n        } else {\r\n          this.setState({\r\n            [name]: value\r\n          },()=>{\r\n            this.getGrantTotal()\r\n          })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { customer_id, plan_id, plan_doj, plan_amount, gst_list, subtotal, \r\n          customer_list, plan_list, instllation_list, router_list,\r\n          router_charge, installation_charge, \r\n          advance_planamount, advance_installationamount, advance_routeramount, discount, \r\n          balance_amount, advance_amount,\r\n          total, if_router_available, plan_gst, router_gst, installation_gst } = this.state;\r\n        return (\r\n            <>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"10\">\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      Customer Add\r\n                      <small> Form</small>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                      <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"customer-name\">Customer Name</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect custom name=\"customer_id\" onChange={this.handleUserChange} value={customer_id} id=\"customer-name\">\r\n                                <option value=\"\">Please select Customer</option>\r\n                                {\r\n                                  customer_list && customer_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.customer_id} ${val.customer_name}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"plan-name\">Plan Name</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect custom name=\"plan_name\" onChange={this.handleUserChange} value={plan_id} id=\"plan-name\">\r\n                                <option value=\"\">Please select Plan</option>\r\n                                {\r\n                                  plan_list && plan_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.plan_id} ${val.plan_amount}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"plan-doj\">Date</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"date\" id=\"plan-doj\" name=\"plan_doj\" onChange={this.handleUserChange} value={plan_doj} placeholder=\"date\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"plan-amount\">Plan Amount</CLabel>\r\n                              <CInput type=\"text\" value={plan_amount} onChange={this.handleUserChange} id=\"plan-amount\" name=\"plan_amount\" placeholder=\"Plan Amount\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"plan-gst\">GST</CLabel>\r\n                              <CSelect custom name=\"plan_gst\" onChange={this.handleUserChange} value={plan_gst} id=\"plan-gst\"  placeholder=\"GST\">\r\n                                <option value=\"\">select GST</option>\r\n                                {\r\n                                  !!gst_list && gst_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.gst_percent}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"instllation-charge\">Installation Charge</CLabel>\r\n                              <CSelect custom onChange={this.handleUserChange} value={installation_charge} id=\"instllation-charge\" name=\"installation_charge\" placeholder=\"Instllation Charge\">\r\n                                <option value=\"\">select Installation</option>\r\n                                {\r\n                                  !!instllation_list && instllation_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.installation_amount}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"installation-gst\">GST</CLabel>\r\n                              <CSelect custom name=\"installation_gst\" onChange={this.handleUserChange} value={installation_gst} id=\"installation-gst\"  placeholder=\"GST\">\r\n                                <option value=\"\">select GST</option>\r\n                                {\r\n                                  !!gst_list && gst_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.gst_percent}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"router-charge\">Router Charge</CLabel>\r\n                              <CSelect custom name=\"router_charge\" onChange={this.handleUserChange} value={router_charge} id=\"router-charge\"  placeholder=\"Router Charge\">\r\n                                <option value=\"\">select Router</option>\r\n                                {\r\n                                  !!router_list && router_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.router_amount}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"2\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"gst\">GST</CLabel>\r\n                              <CSelect custom name=\"router_gst\" onChange={this.handleUserChange} value={router_gst} id=\"router-gst\"  placeholder=\"GST\">\r\n                                <option value=\"\">select GST</option>\r\n                                {\r\n                                  !!gst_list && gst_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.gst_percent}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"pay-plan-amount\">Plan Amount</CLabel>\r\n                              <CInput type=\"text\" value={advance_planamount} onChange={this.handleUserChange} id=\"pay-plan-amount\" name=\"advance_planamount\" placeholder=\"Plan Amount\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"pay-instllation-charge\">Advance Instllation</CLabel>\r\n                              <CInput type=\"text\" value={advance_installationamount} onChange={this.handleUserChange} id=\"pay-instllation-charge\" name=\"advance_installationamount\" placeholder=\"Instllation Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup variant=\"checkbox\" className=\"checkbox\">\r\n                              <CInputCheckbox id=\"pay-router-charge\" name=\"if_router_available\" onChange={this.handleUserChange} checked={if_router_available} />\r\n                              <CLabel htmlFor=\"no-router-charge\">No Router Charge</CLabel>\r\n                            </CFormGroup>\r\n                            <CFormGroup>\r\n                              <CInput type=\"text\" value={advance_routeramount} onChange={this.handleUserChange} id=\"pay-router-charge\" name=\"advance_routeramount\" placeholder=\"Router Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"sub-total\">SUBTOTAL</CLabel>\r\n                              <CInput type=\"text\" disabled={true} value={subtotal} onChange={this.handleUserChange} id=\"sub-total\" name=\"subtotal\" placeholder=\"sub-total\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"discount\">Discount</CLabel>\r\n                              <CInput type=\"text\" value={discount} onChange={this.handleUserChange} id=\"discount\" name=\"discount\" placeholder=\"Discount\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"total\">Total</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"text\" value={total} disabled={true} onChange={this.handleUserChange} id=\"total\" name=\"total\" placeholder=\"Total\" />\r\n                          </CCol>\r\n                        </CFormGroup>        \r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"paid-amount\">Advance Amount</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                          <CInput type=\"text\" value={advance_amount} disabled={true} onChange={this.handleUserChange} id=\"paid-amount\" name=\"advance_amount\" placeholder=\"Paid\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"balance-amount\">Balance</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"text\" value={balance_amount} disabled={true} onChange={this.handleUserChange} id=\"balance-amount\" name=\"balance_amount\" placeholder=\"Bill\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                      <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.handleCancel}><CIcon name=\"cil-ban\"  /> Cancel</CButton>\r\n                      &nbsp;\r\n                      <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleSubmit}><CIcon name=\"cil-scrubber\" /> Add</CButton> \r\n                    </CCardFooter>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n    }\r\n}\r\n\r\nexport default BasicForms\r\n"],"sourceRoot":""}