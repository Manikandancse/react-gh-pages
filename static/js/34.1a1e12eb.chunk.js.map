{"version":3,"sources":["components/connections/add.js"],"names":["BasicForms","props","handleCancel","history","push","handleSubmit","state","customer_name","plan_name","plan_doj","console","log","totalCalculation","install","plan","router","if_router_available","parseInt","handleUserChange","event","target","name","value","router_charge","instllation_charge","plan_amount","axios","get","then","res","data","setState","catch","err","routerVal","checked","total","customer_list","plan_list","gst_list","reqUser","reqPlan","reqGst","all","spread","resUser","resPlan","resGst","results","this","customer_id","plan_id","pay_plan_amount","pay_instllation_charge","pay_router_charge","discount","bill","xs","md","action","method","className","row","htmlFor","custom","onChange","id","map","val","key","type","placeholder","variant","size","color","onClick","Component"],"mappings":"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","file":"static/js/34.1a1e12eb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {  } from 'react-router-dom';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CTextarea,\r\n  CInput,\r\n  CLabel,\r\n  CSelect,\r\n  CInputCheckbox,\r\n  CRow\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react';\r\nimport axios from 'axios';\r\n\r\nclass BasicForms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            customer_list: [],\r\n            plan_list: [],\r\n            gst_list: [],\r\n            customer_name:'', \r\n            plan_name: '',\r\n            plan_doj: '',\r\n            instllation_charge: 0, \r\n            plan_amount: 0, \r\n            router_charge: 0,\r\n            instllation_charge: 0, \r\n            plan_amount: 0, \r\n            router_charge: 0,\r\n            pay_instllation_charge: 0, \r\n            pay_plan_amount: 0, \r\n            pay_router_charge: 0,\r\n            discount: 0,\r\n            total: 0,\r\n            bill: 0,\r\n            if_router_available: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const reqUser = axios.get(`http://localhost:8080/webapi/listuser`);\r\n      const reqPlan = axios.get(`http://localhost:8080/webapi/listplan`);\r\n      const reqGst = axios.get(`http://localhost:8080/webapi/listgst`);\r\n      axios.all([reqUser, reqPlan, reqGst]).then(axios.spread((...response)=>{\r\n        const resUser = response[0];\r\n        const resPlan = response[1];\r\n        const resGst = response[2];\r\n        this.setState({\r\n          customer_list: resUser.data,\r\n          plan_list: resPlan.data.results,\r\n          gst_list: resGst.data.results,\r\n        })\r\n        console.log(\"aa\",resUser,resPlan)\r\n      })).catch(err=>{\r\n        console.log('err',err)\r\n      })\r\n      \r\n    }\r\n\r\n    handleCancel = ()=> {\r\n        this.props.history.push('/connections')\r\n    }\r\n\r\n    handleSubmit = () => {\r\n      const { customer_name, plan_name, plan_doj } = this.state;\r\n      console.log('aaa',this.state)\r\n    }\r\n\r\n    totalCalculation = (install, plan, router) => {\r\n      const { if_router_available } = this.state;\r\n      return if_router_available === false ? parseInt(install) + parseInt(plan) + parseInt(router) : parseInt(install) + parseInt(plan)\r\n    }\r\n\r\n    handleUserChange = event => {\r\n        const { name, value } = event.target;\r\n        const { instllation_charge, plan_amount, router_charge } = this.state;\r\n        if(name === 'plan_name') {\r\n          axios.get(`http://localhost:8080/webapi/listplan/${value}`).then(res=>{\r\n            const { instllation_charge, plan_amount, router_charge } = res.data;\r\n            this.setState({\r\n              [name]: value,\r\n              instllation_charge, \r\n              plan_amount, \r\n              router_charge,\r\n              total: this.totalCalculation(instllation_charge, plan_amount, router_charge)\r\n            })\r\n          }).catch(err=>{\r\n            console.log(\"err\",err)\r\n          })\r\n        }else if(name === 'if_router_available') {\r\n          const routerVal = event.target.checked  ? 0 : router_charge;\r\n          this.setState({\r\n            [name]: event.target.checked ? true : false,\r\n          },()=>{\r\n            const {instllation_charge, plan_amount, router_charge} = this.state;\r\n            this.setState({\r\n              total: this.totalCalculation(instllation_charge, plan_amount, routerVal)\r\n            })\r\n          })\r\n        }else {\r\n          this.setState({\r\n            [name]: value\r\n          })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { customer_id, plan_id, plan_doj, plan_amount, gst_list,\r\n          customer_list, plan_list, instllation_charge, router_charge, pay_plan_amount, pay_instllation_charge, pay_router_charge, discount, total, bill, if_router_available } = this.state;\r\n        return (\r\n            <>\r\n              <CRow>\r\n                <CCol xs=\"12\" md=\"10\">\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      Customer Add\r\n                      <small> Form</small>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm action=\"\" method=\"post\" className=\"form-horizontal\">\r\n                      <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"customer-name\">Customer Name</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect custom name=\"customer_name\" onChange={this.handleUserChange} value={customer_id} id=\"customer-name\">\r\n                                <option value=\"\">Please select Customer</option>\r\n                                {\r\n                                  customer_list && customer_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.customer_id} ${val.customer_name}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"plan-name\">Plan Name</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CSelect custom name=\"plan_name\" onChange={this.handleUserChange} value={plan_id} id=\"plan-name\">\r\n                                <option value=\"\">Please select Plan</option>\r\n                                {\r\n                                  plan_list && plan_list.map(val=>\r\n                                  <option value={`${val.id}`} key={`conn_${val.id}`}>{`${val.plan_id} ${val.plan_amount}`}</option>    \r\n                                  )\r\n                                }\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"plan-doj\">Date</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"date\" id=\"plan-doj\" name=\"plan_doj\" onChange={this.handleUserChange} value={plan_doj} placeholder=\"date\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"plan-amount\">Bill Amount</CLabel>\r\n                              <CInput type=\"text\" value={plan_amount} onChange={this.handleUserChange} id=\"plan-amount\" name=\"plan_amount\" placeholder=\"Plan Amount\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"instllation-charge\">Bill Instllation Charge</CLabel>\r\n                              <CInput type=\"text\" value={instllation_charge} onChange={this.handleUserChange} id=\"instllation-charge\" name=\"instllation_charge\" placeholder=\"Instllation Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"router-charge\">Bill Router Charge</CLabel>\r\n                              <CInput type=\"text\" value={router_charge} onChange={this.handleUserChange} id=\"router-charge\" name=\"router-charge\" placeholder=\"Router Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"pay-plan-amount\">Pay Plan Amount</CLabel>\r\n                              <CInput type=\"text\" value={pay_plan_amount} onChange={this.handleUserChange} id=\"pay-plan-amount\" name=\"pay_plan_amount\" placeholder=\"Plan Amount\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"pay-instllation-charge\">Pay Instllation Charge</CLabel>\r\n                              <CInput type=\"text\" value={pay_instllation_charge} onChange={this.handleUserChange} id=\"pay-instllation-charge\" name=\"pay_instllation_charge\" placeholder=\"Instllation Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup variant=\"checkbox\" className=\"checkbox\">\r\n                              <CInputCheckbox id=\"pay-router-charge\" name=\"if_router_available\" onChange={this.handleUserChange} checked={if_router_available} />\r\n                              <CLabel htmlFor=\"pay-router-charge\">Pay Router Charge</CLabel>\r\n                            </CFormGroup>\r\n                            <CFormGroup>\r\n                              <CInput type=\"text\" value={pay_router_charge} onChange={this.handleUserChange} id=\"pay-router-charge\" name=\"pay_router-charge\" placeholder=\"Router Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"total\">Total</CLabel>\r\n                              <CInput type=\"text\" value={total} onChange={this.handleUserChange} id=\"total\" name=\"total\" placeholder=\"Total\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"discount\">Discount</CLabel>\r\n                              <CInput type=\"text\" value={pay_instllation_charge} onChange={this.handleUserChange} id=\"pay-instllation-charge\" name=\"pay_instllation_charge\" placeholder=\"Instllation Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                          <CCol xs=\"4\">\r\n                            <CFormGroup>\r\n                              <CLabel htmlFor=\"pay-router-charge\">GST</CLabel>\r\n                              <CInput type=\"text\" value={pay_router_charge} onChange={this.handleUserChange} id=\"pay-router-charge\" name=\"pay_router-charge\" placeholder=\"Router Charge\" />\r\n                            </CFormGroup>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"total\">Total</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"text\" value={total} onChange={this.handleUserChange} id=\"total\" name=\"total\" placeholder=\"Total\" />\r\n                          </CCol>\r\n                        </CFormGroup>        \r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"discount\">Discount</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                          <CInput type=\"text\" value={discount} onChange={this.handleUserChange} id=\"discount\" name=\"discount\" placeholder=\"Discount\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol md=\"3\">\r\n                            <CLabel htmlFor=\"Bill\">Bill</CLabel>\r\n                          </CCol>\r\n                          <CCol xs=\"12\" md=\"9\">\r\n                            <CInput type=\"text\" value={bill} onChange={this.handleUserChange} id=\"bill\" name=\"bill\" placeholder=\"Bill\" />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                    </CCardBody>\r\n                    <CCardFooter>\r\n                      <CButton type=\"reset\" size=\"sm\" color=\"danger\" onClick={this.handleCancel}><CIcon name=\"cil-ban\"  /> Cancel</CButton>\r\n                      &nbsp;\r\n                      <CButton type=\"submit\" size=\"sm\" color=\"primary\" onClick={this.handleSubmit}><CIcon name=\"cil-scrubber\" /> Add</CButton> \r\n                    </CCardFooter>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </>\r\n          )\r\n    }\r\n}\r\n\r\nexport default BasicForms\r\n"],"sourceRoot":""}